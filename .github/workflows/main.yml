name: Build and deliver containers

on: push

jobs:
  recipeservice:
    runs-on: ubuntu-latest
    name: Java 17 build, test, deliver recipe-service container
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          cache: maven
          distribution: adopt
      
      - name: Build, test and package project
        working-directory: recipe-service
        run: mvn package -DskipTests

      - name: Docker login
        run: docker login -u ${{ secrets.DOCKER_USER }} -p ${{ secrets.DOCKER_PASSWORD }}

      - name: Docker Build
        run: docker build -t ${{ secrets.DOCKER_USER }}/recipe-service:latest ./recipe-service

      - name: Upload container to Docker Hub with Push
        run: docker push ${{ secrets.DOCKER_USER }}/recipe-service:latest
  ingredientservice:
    runs-on: ubuntu-latest
    name: Java 17 build, test, deliver ingredient-service container
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          cache: maven
          distribution: adopt

      - name: Build, test and package project
        working-directory: ingredient-service
        run: mvn package -DskipTests

      - name: Docker login
        run: docker login -u ${{ secrets.DOCKER_USER }} -p ${{ secrets.DOCKER_PASSWORD }}

      - name: Docker Build
        run: docker build -t ${{ secrets.DOCKER_USER }}/ingredient-service:latest ./ingredient-service

      - name: Upload container to Docker Hub with Push
        run: docker push ${{ secrets.DOCKER_USER }}/ingredient-service:latest
  userservice:
    runs-on: ubuntu-latest
    name: Java 17 build, test, deliver user-service container
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          cache: maven
          distribution: adopt
        
      - name: Build, test and package project
        working-directory: user-service
        run: mvn package -DskipTests
        
      - name: Docker login
        run: docker login -u ${{ secrets.DOCKER_USER }} -p ${{ secrets.DOCKER_PASSWORD }}

      - name: Docker Build
        run: docker build -t ${{ secrets.DOCKER_USER }}/user-service:latest ./user-service

      - name: Upload container to Docker Hub with Push
        run: docker push ${{ secrets.DOCKER_USER }}/user-service:latest
  ratingservice:
    runs-on: ubuntu-latest
    name: Java 17 build, test, deliver rating-service container
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          cache: maven
          distribution: adopt

      - name: Build, test and package project
        working-directory: rating-service
        run: mvn package -DskipTests

      - name: Docker login
        run: docker login -u ${{ secrets.DOCKER_USER }} -p ${{ secrets.DOCKER_PASSWORD }}

      - name: Docker Build
        run: docker build -t ${{ secrets.DOCKER_USER }}/rating-service:latest ./rating-service

      - name: Upload container to Docker Hub with Push
        run: docker push ${{ secrets.DOCKER_USER }}/rating-service:latest
  apigateway:
      runs-on: ubuntu-latest
      name: Java 17 build, test, deliver api-gateway container
      steps:
        - name: Check out repository
          uses: actions/checkout@v3
  
        - name: Set up JDK 17
          uses: actions/setup-java@v3
          with:
            java-version: 17
            cache: maven
            distribution: adopt
  
        - name: Build, test and package project
          working-directory: api-gateway
          run: mvn package -DskipTests
  
        - name: Docker login
          run: docker login -u ${{ secrets.DOCKER_USER }} -p ${{ secrets.DOCKER_PASSWORD }}
  
        - name: Docker Build
          run: docker build -t ${{ secrets.DOCKER_USER }}/api-gateway:latest ./api-gateway
  
        - name: Upload container to Docker Hub with Push
          run: docker push ${{ secrets.DOCKER_USER }}/api-gateway:latest

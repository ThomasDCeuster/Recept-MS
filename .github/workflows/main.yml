name: Build and deliver containers

on: push

jobs:
  recipeservice:
    runs-on: ubuntu-latest
    name: Java 17 build, test, deliver recipe-service container
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          cache: maven
          distribution: adopt
      
      - name: Build, test and package project
        working-directory: ./Recipe-service
        run: mvn package -DskipTests

      - name: Docker login
        run: echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USER }} --password-stdin

      - name: Docker Build
        run: docker build -t ${{ secrets.DOCKER_USER }}/recipe-service:latest ./Recipe-service

      - name: Upload container to Docker Hub with Push
        run: docker push ${{ secrets.DOCKER_USER }}/recipe-service:latest

      - name: Deploy to Okteto
        uses: okteto/deploy-action@v1
        with:
          token: ${{ secrets.OKTETO_TOKEN }}
          manifest: ./Recipe-service/okteto.yml
          image: ${{ secrets.DOCKER_USER }}/recipe-service:latest
          namespace: ${{ secrets.OKTETO_NAMESPACE }}

  ingredientservice:
    runs-on: ubuntu-latest
    name: Java 17 build, test, deliver ingredient-service container
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          cache: maven
          distribution: adopt

      - name: Build, test and package project
        working-directory: ./Ingredient-service
        run: mvn package -DskipTests

      - name: Docker login
        run: docker login -u ${{ secrets.DOCKER_USER }} -p ${{ secrets.DOCKER_PASSWORD }}

      - name: Docker Build
        run: docker build -t ${{ secrets.DOCKER_USER }}/ingredient-service:latest ./Ingredient-service

      - name: Upload container to Docker Hub with Push
        run: docker push ${{ secrets.DOCKER_USER }}/ingredient-service:latest

      - name: Deploy to Okteto
        uses: okteto/deploy-action@v1
        with:
          token: ${{ secrets.OKTETO_TOKEN }}
          manifest: ./Ingredient-service/okteto.yml
          image: ${{ secrets.DOCKER_USER }}/ingredient-service:latest
          namespace: ${{ secrets.OKTETO_NAMESPACE }}
    
  userservice:
    runs-on: ubuntu-latest
    name: Java 17 build, test, deliver user-service container
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          cache: maven
          distribution: adopt
        
      - name: Build, test and package project
        working-directory: ./User-service
        run: mvn package -DskipTests
        
      - name: Docker login
        run: echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USER }} --password-stdin

      - name: Docker Build
        run: docker build -t ${{ secrets.DOCKER_USER }}/user-service:latest ./User-service

      - name: Upload container to Docker Hub with Push
        run: docker push ${{ secrets.DOCKER_USER }}/user-service:latest

      - name: Deploy to Okteto
        uses: okteto/deploy-action@v1
        with:
          token: ${{ secrets.OKTETO_TOKEN }}
          manifest: ./User-service/okteto.yml
          image: ${{ secrets.DOCKER_USER }}/user-service:latest
          namespace: ${{ secrets.OKTETO_NAMESPACE }}
    
  ratingservice:
    runs-on: ubuntu-latest
    name: Java 17 build, test, deliver rating-service container
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          cache: maven
          distribution: adopt

      - name: Build, test and package project
        working-directory: ./Rating-service
        run: mvn package -DskipTests

      - name: Docker login
        run: echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USER }} --password-stdin

      - name: Docker Build
        run: docker build -t ${{ secrets.DOCKER_USER }}/rating-service:latest ./Rating-service

      - name: Upload container to Docker Hub with Push
        run: docker push ${{ secrets.DOCKER_USER }}/rating-service:latest

      - name: Deploy to Okteto
        uses: okteto/deploy-action@v1
        with:
          token: ${{ secrets.OKTETO_TOKEN }}
          manifest: ./Rating-service/okteto.yml
          image: ${{ secrets.DOCKER_USER }}/rating-service:latest
          namespace: ${{ secrets.OKTETO_NAMESPACE }}
    
  apigateway:
    runs-on: ubuntu-latest
    name: Java 17 build, test, deliver api-gateway container
    steps:
    - name: Check out repository
      uses: actions/checkout@v3

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: 17
        cache: maven
        distribution: adopt

    - name: Build, test and package project
      working-directory: ./api-gateway
      run: mvn package -DskipTests

    - name: Docker login
      run: echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USER }} --password-stdin

    - name: Docker Build
      run: docker build -t ${{ secrets.DOCKER_USER }}/api-gateway:latest ./api-gateway

    - name: Upload container to Docker Hub with Push
      run: docker push ${{ secrets.DOCKER_USER }}/api-gateway:latest

    - name: Deploy to Okteto
      uses: okteto/deploy-action@v1
      with:
        token: ${{ secrets.OKTETO_TOKEN }}
        manifest: ./api-gateway/okteto.yml
        image: ${{ secrets.DOCKER_USER }}/api-gateway:latest
        namespace: ${{ secrets.OKTETO_NAMESPACE }}
